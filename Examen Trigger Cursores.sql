--EJERCICIO 4
CREATE OR REPLACE
PROCEDURE IVANLISTADO
IS 
	CURSOR EQUIPO IS 
	SELECT E.NOMBRE, E.NACIONALIDAD, E.NOMBREDIRECTOR
	FROM EQUIPOS E;
	CURSOR CICLISTA IS
	SELECT E.CODEQUIPO, C.NOMBRE AS NOMBRECICLISTA, C.FECHANACIMIENTO
	FROM EQUIPOS E, CICLISTAS C
	WHERE E.CODEQUIPO=C.CODEQUIPO;
	--GROUP BY E.CODEQUIPO;
BEGIN
	FOR REGISTRO IN EQUIPO LOOP
		DBMS_OUTPUT.PUT_LINE('NOMBRE:' || REGISTRO.NOMBRE || 'NACIONALIDAD:' || REGISTRO.NACIONALIDAD || 'NOMBRE DEL DIRECTOR:' || REGISTRO.NOMBREDIRECTOR );
		FOR REGISTRO2 IN CICLISTA LOOP
			DBMS_OUTPUT.PUT_LINE('NOMBRE CICLISTA:' || REGISTRO2.NOMBRECICLISTA|| 'FECHANACIMIENTO:' || REGISTRO2.FECHANACIMIENTO );
		END LOOP;	
	END LOOP;
END IVANLISTADO;
--EJECUTAR
BEGIN
	IVANLISTADO;
END;

--EJERCICIO 1
CREATE OR REPLACE
FUNCTION IVANMEJIASNUMERO (NUMERO IN NUMBER, CONTADOR IN OUT NUMBER)
RETURN NUMBER 
IS
	RESULTADO NUMBER (4);
BEGIN 
	RESULTADO:=0;
	IF NUMERO < 0 THEN 
		RESULTADO:=-1;
	END IF;
	IF NUMERO >-1 THEN
		RESULTADO:=1;
	END IF;
	RETURN RESULTADO;
END;
DECLARE
	NUMERO NUMBER :=-2;
	VALOR NUMBER;
	CONTADOR NUMBER;
	CONTADORBUCLE NUMBER;
BEGIN
	CONTADOR:=0;
	VALOR:=IVANMEJIASNUMERO (NUMERO);
	CONTADORBUCLE:=VALOR;
	IF VALOR := -1 THEN
		CONTADOR:=0;
		DBMS.OUTPUT.PUT_LINE('EL VALOR DEVUELTO ES' || CONTADOR);
	ELSE THEN
		WHILE CONTADORBUCLE > 0 LOOP
			CONTADOR = CONTADOR+CONTADORBUCLE;
			CONTADORBUCLE := CONTADORBUCLE -1;
		END LOOP;
		DBMS.OUTPUT.PUT_LINE('EL VALOR DEVUELTO ES' || CONTADOR);
END;

--EJERCICIO 2
CREATE OR REPLACE
TRIGGER LIMITE
	BEFORE INSERT ON CICLISTAS
	FOR EACH ROW 
DECLARE 
	NUMEROCICLISTAS NUMBER(4);
BEGIN 
	SELECT COUNT(C.DORSAL)
	INTO NUMEROCICLISTAS
	FROM CICLISTAS C
	WHERE C.CODEQUIPO= :NEW.CODEQUIPO;
	IF NUMEROCICLISTAS > 4 THEN
		RAISE_APPLICATION_ERROR(-20020, 'NO PUEDES AÑADIR OTRO CICLISTA, EQUIPO DE 4 MAXIMO');
	END IF;
END;
INSERT INTO CICLISTAS VALUES (20, 'PEDRO', 'ESPAÑOLA', 5 , 1972-11-14 00:00:00.000);

--EJERCICIO 3
CREATE TABLE MEMORIA 
(
	DESCRIPCION VARCHAR2(200)
);
CREATE OR REPLACE 
TRIGGER ACTUALIZAR
	AFTER INSERT OR DELETE ON CICLISTAS
	FOR EACH ROW 
DECLARE 
	NAMECICLISTA CICLISTAS.NOMBRE%TYPE;
	NAMEEQUIPO EQUIPOS.NOMBRE%TYPE;
BEGIN 
	--SELECT DE INSERTAR
	SELECT C.NOMBRE AS NOMBRECICLISTA, E.NOMBRE AS NOMBREEQUIPO
	INTO NAMECICLISTA, NAMEEQUIPO
	FROM CICLISTAS C, EQUIPOS E
	WHERE C.CODEQUIPO=E.CODEQUIPO AND C.DORSAL= :NEW.DORSAL;
	--SELECT DE DELETE
	SELECT C.NOMBRE AS NOMBRECICLISTA, E.NOMBRE AS NOMBREEQUIPO
	INTO NAMECICLISTA, NAMEEQUIPO
	FROM CICLISTAS C, EQUIPOS E
	WHERE C.CODEQUIPO=E.CODEQUIPO AND C.DORSAL= :OLD.DORSAL;
	IF INSERTING THEN
		INSERT INTO MEMORIA VALUES ('EL JUGADOR ' || TO_CHAR(NAMECICLISTA) || 'HA EMPEZADO A FORMAR PARTE DEL EQUIPO ' || TO_CHAR (NAMEEQUIPO) || ' EL DIA ' || TO_CHAR (SYSDATE, 'DD/MM/AA HH/MI/SS' ));
	END IF;
	IF DELETING THEN
		INSERT INTO MEMORIA VALUES ('EL JUGADOR ' || TO_CHAR(NAMECICLISTA) || 'HA DEJADO DE FORMAR PARTE DEL EQUIPO ' || TO_CHAR (NAMEEQUIPO) || ' EL DIA ' || TO_CHAR (SYSDATE, 'DD/MM/AA HH/MI/SS' ));
	END IF;
END;
INSERT INTO CICLISTAS VALUES (25, 'MARTA', 'ESPAÑOLA', 1 , SYSDATE);
insert into ciclistas (dorsal, nombre, nacionalidad,codequipo,fechanacimiento)
values (60, 'Olana', 'Española', 2, to_date('27/04/1977','dd/mm/yyyy'));
DELETE FROM CICLISTAS WHERE DORSAL=21;
--SELECT MEMORIA CONTENIDO
SELECT *
FROM MEMORIA;



