--1 PAQUETE CON PROCEDIMIENTOS Y FUNCIONES
CREATE OR REPLACE PACKAGE IVANMEJIAS IS 
VERSION NUMBER :=1.0;
BEGIN
	PROCEDURE LISTADOEQUIPOS;
	FUNCTION CARRERASGANADAS(NOMBREEQUIPO EQUIPO.NOMBRE%TYPE)
	RETURN NUMBER;
	FUNCTION BORRARCICLISTAS(FECHA ETAPAS.FECHA%TYPE, NOMBREEQUIPO1 EQUIPO.NOMBRE%TYPE)
	RETURN NUMBER;
END IVANMEJIAS;
CREATE OR REPLACE PACKAGE BODY IVANMEJIAS IS 
--PROCEDIMIENTO
PROCEDURE LISTADOEQUIPOS IS 
CURSOR C_EQUIPO IS 
SELECT E.NOMBRE, E.NACIONALIDAD, E.NOMBREDIRECTOR
FROM EQUIPOS E;
CURSOR C_CICLISTA IS
SELECT C.NOMBRE, C.FECHANACIMIENTO 
FROM CICLISTAS C, EQUIPOS E
WHERE C.CODEQUIPO=E.CODEQUIPO;
NUMEROCICLISTAS NUMBER;
NUMEROCICLISTASA NUMBER;
BEGIN
	FOR REGISTRO IN C_EQUIPO LOOP
		NUMEROCICLISTAS:=0;
		NUMEROCICLISTASA:=0;
		DBMS_OUTPUT.PUT_LINE('NOMBRE ' || REGISTRO.NOMBRE || ' NACIONALIDAD ' || REGISTRO.NACIONALIDAD || ' NOMBRE DEL DIRECTOR ' || REGISTRO.NOMBREDIRECTOR);
		FOR REGISTRO2 IN C_CICLISTA LOOP
			NUMEROCICLISTAS:= NUMEROCICLISTAS+1;
			IF REGISTRO2.NOMBRE LIKE 'A%' THEN
			NUMEROCICLISTASA:= NUMEROCICLISTASA+1;
			END IF;
			DBMS_OUTPUT.PUT_LINE('NOMBRE DEL CICLISTA ' || REGISTRO2.NOMBRE || ' FECHA NACIMIENTO ' || REGISTRO2. FECHANACIMIENTO);
		END LOOP;
	DBMS_OUTPUT.PUT_LINE('TOTAL CICLISTAS POR EQUIPOS ' || NUMEROCICLISTAS);
	DBMS_OUTPUT.PUT_LINE( 'CICLISTAS CON LETRA INICIAL A ' || NUMEROCICLISTASA);
END LOOP;
END;
--FUNCION CARRERASGANADAS
FUNCTION CICLISMO.CARRERASGANADAS(NOMBREEQUIPO EQUIPOS.NOMBRE%TYPE)
RETURN NUMBER 
IS 
CURSOR C_GANARCARRERAS (NOMEQUIPO EQUIPOS.NOMBRE%TYPE) IS 
SELECT CL.POSICION
FROM EQUIPOS E, CICLISTAS C, CLASIFICACIONETAPAS CL
WHERE E.CODEQUIPO = C.CODEQUIPO AND C.DORSAL =CL.DORSAL AND E.NOMBRE=NOMEQUIPO;
CARRERASGANADAS NUMBER;
NOEXISTE EXCEPTION;
BEGIN 
	CARRERASGANADAS:=0;
	IF REGISTRO3.POSICION%NOTFOUND THEN
		RAISE NOEXISTE;
	END IF;
	FOR REGISTRO3 IN C_GANARCARRERAS(NOMBREEQUIPO) LOOP
		IF REGISTRO3.POSICION=1 THEN
			CARRERASGANADAS:=CARRERASGANADAS+1;
		END IF;
	END LOOP;
	COMMIT;
	EXCEPTION 
	WHEN NOEXISTE THEN
		DBMS_OUTPUT.PUT_LINE('EL NOMBRE DE EQUIPO ASIGNADO NO EXISTE');
		ROLLBACK;
	RETURN CARRERASGANADAS;
END;
--FUNCION BORRAR
FUNCTION BORRARCICLISTAS(FECHA ETAPAS.FECHA%TYPE, NOMBREEQUIPO1 EQUIPO.NOMBRE%TYPE) 
RETURN NUMBER
IS 
CURSOR C_BORRAR(FECHA1 ETAPAS.FECHA%TYPE, NOMBREEQUIPOO EQUIPO.NOMBRE%TYPE) IS 
SELECT C.FECHANACIMIENTO 
FROM EQUIPOS E, CICLISTAS C
WHERE E.CODEQUIPO = C.CODEQUIPO AND E.NOMBRE=NOMBREEQUIPOO;
CICLISTASBORRADOS NUMBER;
ELIMINARMAS5 EXCEPTION;
BEGIN 
	CICLISTASBORRADOS:=0;
	FOR REGISTRO4 IN C_BORRAR(FECHA, NOMBREEQUIPO1) LOOP
		IF REGISTRO4.FECHANACIMIENTO > FECHA THEN
			DELETE FROM CICLISTAS C WHERE C.FECHANACIMIENTO=REGISTRO4.FECHANACIMIENTO;
			CICLISTASBORRADOS:=CICLISTASBORRADOS+1;
		END IF;
	END LOOP;
	IF C_BORRAR%ROWCOUNT > 5 THEN
		RAISE ELIMINARMAS5;
	END IF;
	COMMIT;
	EXCEPTION
	WHEN SQL%NOT_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
	WHEN ELIMINARMAS5 THEN
		DBMS_OUTPUT.PUT_LINE('SE HAN BORRADO MAS DE 5 FILAS');
		ROLLBACK;
	RETURN CICLISTASBORRADOS;
END;
END IVANMEJIAS;
BEGIN
	IVANMEJIAS.LISTADOEQUIPOS;
END;
SELECT IVANMEJIAS.CARRERASGANADAS('KAS') FROM DUAL;
SELECT IVANMEJIAS.CARRERASGANADAS('FAS') FROM DUAL;
SELECT IVANMEJIAS.BORRARCICLISTAS('1984-05-12 00:00:00.000', 'KAS') FROM DUAL;
--2
/*CREATE OR REPLACE PROCEDURE LISTADOEQUIPOS IS 
CURSOR C_EQUIPO IS 
SELECT E.NOMBRE, E.NACIONALIDAD, E.NOMBREDIRECTOR
FROM EQUIPOS E;
CURSOR C_CICLISTA IS
SELECT C.NOMBRE, C.FECHANACIMIENTO 
FROM CICLISTAS C, EQUIPOS E
WHERE C.CODEQUIPO=E.CODEQUIPO;
NUMEROCICLISTAS NUMBER;
NUMEROCICLISTASA NUMBER;
BEGIN
	FOR REGISTRO IN C_EQUIPO LOOP
		NUMEROCICLISTAS:=0;
		NUMEROCICLISTASA:=0;
		DBMS_OUTPUT.PUT_LINE('NOMBRE ' || REGISTRO.NOMBRE || ' NACIONALIDAD ' || REGISTRO.NACIONALIDAD || ' NOMBRE DEL DIRECTOR ' || REGISTRO.NOMBREDIRECTOR);
		FOR REGISTRO2 IN C_CICLISTA LOOP
			NUMEROCICLISTAS:= NUMEROCICLISTAS+1;
			IF REGISTRO2.NOMBRE LIKE 'A%' THEN
			NUMEROCICLISTASA:= NUMEROCICLISTASA+1;
			END IF;
			DBMS_OUTPUT.PUT_LINE('NOMBRE DEL CICLISTA ' || REGISTRO2.NOMBRE || ' FECHA NACIMIENTO ' || REGISTRO2. FECHANACIMIENTO);
		END LOOP;
	DBMS_OUTPUT.PUT_LINE('TOTAL CICLISTAS POR EQUIPOS ' || NUMEROCICLISTAS);
	DBMS_OUTPUT.PUT_LINE( 'CICLISTAS CON LETRA INICIAL A ' || NUMEROCICLISTASA);
END LOOP;
END;
BEGIN
	LISTADOEQUIPOS;
END;
--3
CREATE OR REPLACE FUNCTION CICLISMO.CARRERASGANADAS(NOMBREEQUIPO EQUIPOS.NOMBRE%TYPE)
RETURN NUMBER 
IS 
CURSOR C_GANARCARRERAS (NOMEQUIPO EQUIPOS.NOMBRE%TYPE) IS 
SELECT CL.POSICION
FROM EQUIPOS E, CICLISTAS C, CLASIFICACIONETAPAS CL
WHERE E.CODEQUIPO = C.CODEQUIPO AND C.DORSAL =CL.DORSAL AND E.NOMBRE=NOMEQUIPO;
CARRERASGANADAS NUMBER;
NOEXISTE EXCEPTION;
BEGIN 
	CARRERASGANADAS:=0;
	IF REGISTRO3.POSICION%NOT_DATA_FOUND THEN
		RAISE NOEXISTE;
	END IF;
	FOR REGISTRO3 IN C_GANARCARRERAS(NOMBREEQUIPO) LOOP
		IF REGISTRO3.POSICION=1 THEN
			CARRERASGANADAS:=CARRERASGANADAS+1;
		END IF;
	END LOOP;
	COMMIT;
	EXCEPTION 
	WHEN NOEXISTE THEN
		DBMS_OUTPUT.PUT_LINE('EL NOMBRE DE EQUIPO ASIGNADO NO EXISTE');
		ROLLBACK;
	RETURN CARRERASGANADAS;
END;
SELECT CARRERASGANADAS('KAS') FROM DUAL;
--4
CREATE OR REPLACE 
FUNCTION BORRARCICLISTAS(FECHA ETAPAS.FECHA%TYPE, NOMBREEQUIPO1 EQUIPO.NOMBRE%TYPE) 
RETURN NUMBER
IS 
CURSOR C_BORRAR(FECHA1 ETAPAS.FECHA%TYPE, NOMBREEQUIPOO EQUIPO.NOMBRE%TYPE) IS 
SELECT C.FECHANACIMIENTO 
FROM EQUIPOS E, CICLISTAS C
WHERE E.CODEQUIPO = C.CODEQUIPO AND E.NOMBRE=NOMBREEQUIPOO;
ELIMINARMAS5 EXCEPTION;
CICLISTASBORRADOS NUMBER;
BEGIN 
	FOR REGISTRO4 IN C_BORRAR(FECHA, NOMBREEQUIPO1) LOOP
		IF REGISTRO4.FECHANACIMIENTO > FECHA THEN
			DELETE FROM CICLISTAS C WHERE C.FECHANACIMIENTO=REGISTRO4.FECHANACIMIENTO;
			CICLISTASBORRADOS:=CICLISTASBORRADOS+1;
		END IF;
	END LOOP;
	IF C_BORRAR%ROWCOUNT > 5 THEN
		RAISE ELIMINARMAS5;
	END IF;
	COMMIT;
	EXCEPTION
	WHEN C_BORRAR%NOTFOUND THEN
		DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
	WHEN ELIMINARMAS5 THEN
		DBMS_OUTPUT.PUT_LINE('SE HAN BORRADO MAS DE 5 FILAS');
		ROLLBACK;
	RETURN CICLISTASBORRADOS;
END;
SELECT BORRARCICLISTAS('1984-05-12 00:00:00.000', 'KAS') FROM DUAL;*/
